#server.port=9090
server.ssl.key-store=classpath:/etc/cas/thekeystore
server.context-parameters.isLog4jAutoInitializationDisabled=true

#cas.authn.accept.users=casuser::Mellon
cas.authn.accept.users=
cas.authn.accept.name=

cas.authn.jdbc.query[0].url=jdbc:postgresql://localhost:5432/OHDSI
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.PostgreSQL9Dialect
cas.authn.jdbc.query[0].user=ohdsi_admin_user
cas.authn.jdbc.query[0].password=admin1
cas.authn.jdbc.query[0].ddlAuto=none
cas.authn.jdbc.query[0].driverClass=org.postgresql.Driver
cas.authn.jdbc.query[0].sql=select * from webapi.sec_user where login = ?
cas.authn.jdbc.query[0].fieldPassword=password
#cas.authn.jdbc.query[0].passwordEncoder.type=NONE
cas.authn.jdbc.query[0].passwordEncoder.type=BCRYPT
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
cas.authn.jdbc.query[0].passwordEncoder.strength=8

#cas.authn.attributeRepository.jdbc[0].sql=select * from (select u.login as login, 'role' as attrname, r."name" as attrvalue from webapi.sec_user u inner join webapi.sec_user_role ur on u.id = ur.user_id inner join webapi.sec_role r on ur.role_id = r.id where login = 'moorthamer@gmail.com' union all select u.login as login, 'permission' as attrname, p.value as attrvalue from webapi.sec_user u inner join webapi.sec_user_role ur on u.id = ur.user_id inner join webapi.sec_role r on ur.role_id = r.id inner join webapi.sec_role_permission rp on r.id = rp.role_id inner join webapi.sec_permission p on rp.permission_id = p.id where login = 'moorthamer@gmail.com' ) USER_ATTRIBUTES order by login, attrname, attrvalue
cas.authn.attributeRepository.jdbc[0].url=jdbc:postgresql://localhost:5432/OHDSI
cas.authn.attributeRepository.jdbc[0].dialect=org.hibernate.dialect.PostgreSQL9Dialect
cas.authn.attributeRepository.jdbc[0].user=ohdsi_admin_user
cas.authn.attributeRepository.jdbc[0].password=admin1
cas.authn.attributeRepository.jdbc[0].ddlAuto=none
cas.authn.attributeRepository.jdbc[0].driverClass=org.postgresql.Driver
cas.authn.attributeRepository.jdbc[0].sql=select u.login as login, 'role' as attrname, r."name" as attrvalue from webapi.sec_user u inner join webapi.sec_user_role ur on u.id = ur.user_id inner join webapi.sec_role r on ur.role_id = r.id where {0} order by login, attrvalue
cas.authn.attributeRepository.jdbc[0].singleRow=false
cas.authn.attributeRepository.jdbc[0].username=login
cas.authn.attributeRepository.jdbc[0].columnMappings.attrname=attrvalue

cas.authn.attributeRepository.jdbc[1].url=jdbc:postgresql://localhost:5432/OHDSI
cas.authn.attributeRepository.jdbc[1].dialect=org.hibernate.dialect.PostgreSQL9Dialect
cas.authn.attributeRepository.jdbc[1].user=ohdsi_admin_user
cas.authn.attributeRepository.jdbc[1].password=admin1
cas.authn.attributeRepository.jdbc[1].ddlAuto=none
cas.authn.attributeRepository.jdbc[1].driverClass=org.postgresql.Driver
cas.authn.attributeRepository.jdbc[1].sql=select u.login as login, 'permission' as attrname, p.value as attrvalue from webapi.sec_user u inner join webapi.sec_user_role ur on u.id = ur.user_id inner join webapi.sec_role r on ur.role_id = r.id inner join webapi.sec_role_permission rp on r.id = rp.role_id inner join webapi.sec_permission p on rp.permission_id = p.id where {0} order by login, attrvalue
cas.authn.attributeRepository.jdbc[1].singleRow=false
cas.authn.attributeRepository.jdbc[1].username=login
cas.authn.attributeRepository.jdbc[1].columnMappings.attrname=attrvalue

cas.authn.attributeRepository.attributes.role=role
cas.authn.attributeRepository.attributes.permission=permission
cas.authn.attributeRepository.defaultAttributesToRelease=role,permission


cas.log.dir=logs
